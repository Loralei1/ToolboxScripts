import maya.cmds as cmds

import math

class CalculatorTwo():
    
    import maya.cmds as cmds
    
    
    def __init__(self):
        
        self.window_name = "calcToolFinal"
    def create(self): 
        self.delete()
        
        self.window_name = cmds.window(self.window_name)
        self.m_column = cmds.columnLayout(p = self.window_name, adj = True)
        
        self.values = cmds.textField(p=self.m_column, placeholderText = 'Enter numbers separated by commas, e.g., 1, 3, 4, 5')
        cmds.button(p=self.m_column, label = 'Add', command = lambda *args: self.AddBTN())
        cmds.button(p=self.m_column, label = 'Subtract', command = lambda *args: self.SubtractBTN())
        cmds.button(p=self.m_column, label = 'Divide', command = lambda *args: self.DivideBTN())
        cmds.button(p=self.m_column, label = 'Multiply', command = lambda *args: self.MultiplyBTN())
        cmds.button(p=self.m_column, label = 'Mode', command = lambda *args: self.ModeBTN())
        cmds.button(p=self.m_column, label = 'Mean', command = lambda *args: self.MeanBTN())
        cmds.button(p=self.m_column, label = 'Median', command = lambda *args: self.MedianBTN())
        cmds.button(p=self.m_column, label = 'Power', command = lambda *args: self.PowerBTN())
        
        
        
        cmds.showWindow(self.window_name)
    
    def PowerBTN(self):
        
        
        num = cmds.textField(self.values, q=True, text=True)
        
        result = CalculatorTwo.Power(self, num)
        
        self.result = cmds.floatField(value=result)
        cmds.textField(self.values, e=True, text='')    
    
    def MedianBTN(self):
        num = cmds.textField(self.values, q=True, text=True)
        
        result = CalculatorTwo.Median(self, num)
        self.result = cmds.floatField(value=result)
        cmds.textField(self.values, e=True, text='')
    
    def MeanBTN(self):
        num = cmds.textField(self.values, q=True, text=True)
        
        result = CalculatorTwo.Mean(self, num)
        self.result = cmds.floatField(value=result)
        cmds.textField(self.values, e=True, text='')
    
    def ModeBTN(self):
        num = cmds.textField(self.values, q=True, text=True)
        
        result = CalculatorTwo.Mode(self, num)
        self.result = cmds.floatField(value=result)
        cmds.textField(self.values, e=True, text='')
    
    def MultiplyBTN(self):
        num = cmds.textField(self.values, q=True, text=True)
        
        result = CalculatorTwo.Multiply(self, num)
        self.result = cmds.floatField(value=result)
        cmds.textField(self.values, e=True, text='')
    
    def DivideBTN(self):
        num = cmds.textField(self.values, q=True, text=True)
        
        result = CalculatorTwo.Divide(self, num)
        self.result = cmds.floatField(value=result)
        cmds.textField(self.values, e=True, text='')
    
    def SubtractBTN(self):
        
        num = cmds.textField(self.values, q=True, text=True)
        
        result = CalculatorTwo.Subtract(self, num)
        self.result = cmds.floatField(value=result)
        cmds.textField(self.values, e=True, text='')    
    
    def AddBTN(self):
        
        num = cmds.textField(self.values, q=True, text=True)
        
        result = CalculatorTwo.Add(self, num)
        self.result = cmds.floatField(value=result)
        cmds.textField(self.values, e=True, text='')
    
    def Multiply(self, values):
        
        values = [float(x) for x in values.split(",")]

        result = 1
        
        i = 0 
    
        for val in values: 
    
            result *= values[i]
            
            i = i + 1
            print result
    
        return result
        print result
    
    
    def Divide(self, values):
        
        values = [float(x) for x in values.split(",")]

        result = values[0]

        counter =  1

        while (counter <= len(values) - 1): 

            result /= values[counter]
            print result

            break

        return float(result)
    
    def Add(self, values):
        
        values = [float(x) for x in values.split(",")]

        result = values[0] 
        
        print values
        print len(values)
        
        i = 0
    
        for val in values:
             
            result += values[i]
            
            i = i + 1
            print result
        return result
        print result
        
    
    def Subtract(self, values):
        
        values = [float(x) for x in values.split(",")]

        result = 0
        print values
        print len(values) 
        i = 0
        for val in values: 
    
                result -= values[i]
                i = i + 1
                print result
        return result
        print result
        return result
        
    def Mode(self, values):

    
        values = [float(x) for x in values.split(",")]
        counter = 0 
    
        modeList = [0]
    
        highFreq = 0
    
        modeNumber = 0
    
        Mode = 0
    
        
    
        for val in values:
    
               counter = values.count(val)
    
               print (counter), val         
    
               modeList.append(counter)
    
               highFreq = max(modeList)
    
               print highFreq
    
               modeNumber = modeList.index(highFreq)
    
               print modeNumber
    
               mode = values[modeNumber]
    
               print mode 
    
               
    
        return mode
    
        return highFreq
    
        print "The mode is ", mode, "with a frequency of", highFreq
    
    def Mean(self, values):
        
        values = [float(x) for x in values.split(",")]
        
        sum = 0 
    
        result = 0
    
        i = 0 
    
        for val in values: 
    
            sum += values[i]
            
             
    
            result = float(sum/len(values))
            
            i = i + 0
            
            print result 
    
        return result
    
    def Median(self, values):
        
        values = [float(x) for x in values.split(",")]
        
        median = 0
    
        sum = len(values)/2
    
        sum = int(math.ceil(sum)) 
    
        median = values[sum]
    
        
        print median
        return median
        
    def Power(self, values): 

        import math
        import maya.cmds as cmds
        
        values = [float(x) for x in values.split(",")]
    
    
        result = math.pow(values[0], values[1])
        return result
        
    
    def delete(self): 
        import maya.cmds as cmds
        if cmds.window(self.window_name, exists=True):
            cmds.deleteUI(self.window_name)
            
    
         
newCalcTool = CalculatorTwo()    

newCalcTool.create()   
